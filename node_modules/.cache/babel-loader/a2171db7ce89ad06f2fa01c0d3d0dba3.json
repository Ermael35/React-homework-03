{"ast":null,"code":"import axios from \"axios\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  todos: [],\n  isLoading: false,\n  error: null\n};\nexport const __getTodos = createAsyncThunk(\"todos/getTodos\", async (payload, thunkAPI) => {\n  try {\n    const data = await axios.get(\"http://localhost:3001/todos\");\n    return thunkAPI.fulfillWithValue(data.data);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const todos = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    addTodo(state, action) {\n      state.push(action.payload);\n    },\n\n    deleteTodo(state, action) {\n      let index = state.findIndex(todo => todo.id === action.payload);\n      state.splice(index, 1);\n    },\n\n    updateTodo(state, action) {\n      let index = state.findIndex(todo => todo.id === action.payload.id);\n      state.splice(index, 1, action.payload);\n    },\n\n    extraReducers: {\n      [__getTodos.pending]: (state, action) => {\n        console.log(\"pending 상태\", state, action); // Promise가 pending일때 dispatch\n      },\n      [__getTodos.fulfilled]: (state, action) => {\n        console.log(\"fulfilled 상태\", state, action); // Promise가 fullfilled일 때 dispatch\n      },\n      [__getTodos.rejected]: (state, action) => {\n        console.log(\"rejected 상태\", state, action); // Promise가 rejected일 때 dispatch\n      }\n    }\n  }\n});\nexport const {\n  addTodo,\n  deleteTodo,\n  updateTodo\n} = todos.actions;\nexport default todos;","map":{"version":3,"names":["axios","createAsyncThunk","createSlice","initialState","todos","isLoading","error","__getTodos","payload","thunkAPI","data","get","fulfillWithValue","rejectWithValue","name","reducers","addTodo","state","action","push","deleteTodo","index","findIndex","todo","id","splice","updateTodo","extraReducers","pending","console","log","fulfilled","rejected","actions"],"sources":["/Users/lenkokukyojulo/Desktop/sparta_react/com/React-homework-03/src/redux/modules/todo.js"],"sourcesContent":["import axios from \"axios\"; \nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\n\nconst initialState ={\n  \n    todos:[],\n    isLoading:false,\n    error:null,\n  \n}\nexport const __getTodos = createAsyncThunk(\n  \"todos/getTodos\",\n  async (payload, thunkAPI) => {\n    try {\n      const data = await axios.get(\"http://localhost:3001/todos\");\n      return thunkAPI.fulfillWithValue(data.data);\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\nexport const todos = createSlice({\n  name: \"todos\",\n  initialState,\n\n  reducers: {\n    addTodo(state, action) {\n      state.push(action.payload);\n    },\n    deleteTodo(state, action) {\n      let index = state.findIndex((todo) => todo.id === action.payload);\n      state.splice(index, 1);\n    },\n    updateTodo(state, action){\n      let  index = state.findIndex((todo) =>  todo.id === action.payload.id);\n      state.splice(index, 1, action.payload);\n    },\n    \n    extraReducers: {\n      [__getTodos.pending]: (state, action) => {\n        console.log(\"pending 상태\", state, action); // Promise가 pending일때 dispatch\n      },\n      [__getTodos.fulfilled]: (state, action) => {\n        console.log(\"fulfilled 상태\", state, action); // Promise가 fullfilled일 때 dispatch\n      },\n      [__getTodos.rejected]: (state, action) => {\n        console.log(\"rejected 상태\", state, action); // Promise가 rejected일 때 dispatch\n      },\n    },\n  },\n});\n\nexport const { addTodo, deleteTodo, updateTodo } = todos.actions;\nexport default todos;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAGA,MAAMC,YAAY,GAAE;EAEhBC,KAAK,EAAC,EAFU;EAGhBC,SAAS,EAAC,KAHM;EAIhBC,KAAK,EAAC;AAJU,CAApB;AAOA,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CACxC,gBADwC,EAExC,OAAOO,OAAP,EAAgBC,QAAhB,KAA6B;EAC3B,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,6BAAV,CAAnB;IACA,OAAOF,QAAQ,CAACG,gBAAT,CAA0BF,IAAI,CAACA,IAA/B,CAAP;EACD,CAHD,CAGE,OAAOJ,KAAP,EAAc;IACd,OAAOG,QAAQ,CAACI,eAAT,CAAyBP,KAAzB,CAAP;EACD;AACF,CATuC,CAAnC;AAWP,OAAO,MAAMF,KAAK,GAAGF,WAAW,CAAC;EAC/BY,IAAI,EAAE,OADyB;EAE/BX,YAF+B;EAI/BY,QAAQ,EAAE;IACRC,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACrBD,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACV,OAAlB;IACD,CAHO;;IAIRY,UAAU,CAACH,KAAD,EAAQC,MAAR,EAAgB;MACxB,IAAIG,KAAK,GAAGJ,KAAK,CAACK,SAAN,CAAiBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACV,OAA7C,CAAZ;MACAS,KAAK,CAACQ,MAAN,CAAaJ,KAAb,EAAoB,CAApB;IACD,CAPO;;IAQRK,UAAU,CAACT,KAAD,EAAQC,MAAR,EAAe;MACvB,IAAKG,KAAK,GAAGJ,KAAK,CAACK,SAAN,CAAiBC,IAAD,IAAWA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACV,OAAP,CAAegB,EAAtD,CAAb;MACAP,KAAK,CAACQ,MAAN,CAAaJ,KAAb,EAAoB,CAApB,EAAuBH,MAAM,CAACV,OAA9B;IACD,CAXO;;IAaRmB,aAAa,EAAE;MACb,CAACpB,UAAU,CAACqB,OAAZ,GAAsB,CAACX,KAAD,EAAQC,MAAR,KAAmB;QACvCW,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bb,KAA1B,EAAiCC,MAAjC,EADuC,CACG;MAC3C,CAHY;MAIb,CAACX,UAAU,CAACwB,SAAZ,GAAwB,CAACd,KAAD,EAAQC,MAAR,KAAmB;QACzCW,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Bb,KAA5B,EAAmCC,MAAnC,EADyC,CACG;MAC7C,CANY;MAOb,CAACX,UAAU,CAACyB,QAAZ,GAAuB,CAACf,KAAD,EAAQC,MAAR,KAAmB;QACxCW,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2Bb,KAA3B,EAAkCC,MAAlC,EADwC,CACG;MAC5C;IATY;EAbP;AAJqB,CAAD,CAAzB;AA+BP,OAAO,MAAM;EAAEF,OAAF;EAAWI,UAAX;EAAuBM;AAAvB,IAAsCtB,KAAK,CAAC6B,OAAlD;AACP,eAAe7B,KAAf"},"metadata":{},"sourceType":"module"}