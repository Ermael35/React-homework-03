{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const commentSlice = createSlice({\n  name: \"commen\",\n  initialState: {\n    todos: [{\n      id: 0,\n      name: '',\n      comm: ''\n    }]\n  },\n  reducers: {\n    addComment: (state, action) => {\n      state.todos.push([action.payload]);\n    } // deleteComment: (state, action) =>{\n    //   const index = state.todos.findIndex(todo=>todo.id === action.payload)\n    // },\n\n  }\n});\nexport const {\n  addComment\n} = commentSlice.actions;\nexport default commentSlice.reducer;","map":{"version":3,"names":["createSlice","commentSlice","name","initialState","todos","id","comm","reducers","addComment","state","action","push","payload","actions","reducer"],"sources":["/Users/lenkokukyojulo/Desktop/sparta_react/com/React-homework-03/src/Redux/modules/commentSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n\n\nexport const commentSlice = createSlice({\n  name: \"commen\",\n  initialState:{\n    todos:[{\n    id:0,\n    name:'',\n    comm:''\n  }\n    \n  ]},\n  reducers: {\n    addComment: (state, action) => {\n      state.todos.push([action.payload])\n      \n    },\n    // deleteComment: (state, action) =>{\n    //   const index = state.todos.findIndex(todo=>todo.id === action.payload)\n\n    // },\n    \n  },\n  \n});\n\nexport const { addComment} = commentSlice.actions;\nexport default commentSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAIA,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC;EACtCE,IAAI,EAAE,QADgC;EAEtCC,YAAY,EAAC;IACXC,KAAK,EAAC,CAAC;MACPC,EAAE,EAAC,CADI;MAEPH,IAAI,EAAC,EAFE;MAGPI,IAAI,EAAC;IAHE,CAAD;EADK,CAFyB;EAUtCC,QAAQ,EAAE;IACRC,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC7BD,KAAK,CAACL,KAAN,CAAYO,IAAZ,CAAiB,CAACD,MAAM,CAACE,OAAR,CAAjB;IAED,CAJO,CAKR;IACA;IAEA;;EARQ;AAV4B,CAAD,CAAhC;AAwBP,OAAO,MAAM;EAAEJ;AAAF,IAAgBP,YAAY,CAACY,OAAnC;AACP,eAAeZ,YAAY,CAACa,OAA5B"},"metadata":{},"sourceType":"module"}